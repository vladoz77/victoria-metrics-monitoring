replicaCount: 3

mode: statefulSet

statefulSet:
  clusterMode: true
  replicationFactor: 1

nameOverride: vmagent
fullnameOverride: vmagent
annotations:
  configmap.reloader.stakater.com/reload: vmagent-config

extraArgs:
  promscrape.cluster.memberLabel: vmagent_instance

resources:
  limits:
    cpu: 100m
    memory: 200Mi
  requests:
    cpu: 20m
    memory: 100Mi

extraVolumeMounts:
- name: etcd-tls-volume
  mountPath: /tls/etcd-tls

extraVolumes:
- name: etcd-tls-volume
  secret:
    secretName: etcd-ca

remoteWrite:
  - url: "http://vminsert.monitoring.svc.cluster.local:8480/insert/0/prometheus/"

service:
  enabled: true
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8429"
ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: ca-issuer
  hosts:
  - name: vmagent.dev.local
    path: /
    port: http
  tls:
  - secretName: vmagent-tls
    hosts:
    - vmagent.dev.local

affinity:
  podAntiAffinity:  
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values: [vmagent]
        topologyKey: kubernetes.io/hostname

persistence:
  enabled: true
  size: 1Gi
  storageClassName: longhorn-data

config:
  global:
    scrape_interval: 10s
  # scrape_config_files:
  #     - /custom-configs/*.yml
  scrape_configs:
  #etcd
  - job_name: etcd
    honor_labels: true
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names:
        - kube-system
    scheme: https
    tls_config:
      insecure_skip_verify: true
      cert_file: /tls/etcd-tls/server.crt
      key_file: /tls/etcd-tls/server.key
    relabel_configs:
    - source_labels: [ __meta_kubernetes_pod_label_component ]
      regex: etcd
      action: keep
    - source_labels:
      - __address__
      regex: (.+?)(\\:\\d+)?
      replacement: $1:2379
      action: replace
      target_label: __address__
    - source_labels:
      - __meta_kubernetes_pod_name
      target_label: pod
    - source_labels:
      - __meta_kubernetes_pod_container_name
      target_label: container
    - source_labels:
      - __meta_kubernetes_namespace
      target_label: namespace
    - source_labels:
      - __meta_kubernetes_pod_node_name
      target_label: node

  #apiserver
  - job_name: apiserver
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
        - default
    scheme: https
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    relabel_configs:
    - action: keep
      source_labels: [ __meta_kubernetes_service_label_component ]
      regex: apiserver
    - action: keep
      source_labels: [ __meta_kubernetes_endpoint_port_name ]
      regex: https
    - source_labels: [ __meta_kubernetes_pod_node_name ]
      target_label: node
    - source_labels: [ __meta_kubernetes_namespace ]
      target_label: namespace
    - source_labels: [ __meta_kubernetes_service_name ]
      target_label: service
    - source_labels: [ __meta_kubernetes_pod_name ]
      target_label: pod
    - target_label: endpoint
      replacement: https

  #kubelet
  - job_name: kubelet
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - replacement: kubernetes.default.svc:443
      target_label: __address__
    - regex: (.+)
      replacement: /api/v1/nodes/$1/proxy/metrics
      source_labels:
      - __meta_kubernetes_node_name
      target_label: __metrics_path__
    - source_labels: [ __meta_kubernetes_node_name ]
      target_label: node

  # cadvisor
  - job_name: cadvisor
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    honor_timestamps: false
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [ __meta_kubernetes_node_name ]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
    - target_label: job
      replacement: cadvisor
    - source_labels: [ __meta_kubernetes_node_name ]
      target_label: node
    metric_relabel_configs:
    - action: drop
      source_labels: [ __name__ ]
      regex: container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)
    - action: drop
      source_labels: [ __name__ ]
      regex: container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)
    - action: drop
      source_labels: [ __name__ ]
      regex: container_memory_(mapped_file|swap)
    - action: drop
      source_labels: [ __name__ ]
      regex: container_(file_descriptors|tasks_state|threads_max)
    - action: drop
      source_labels: [ __name__ ]
      regex: container_spec.*
    - action: drop
      source_labels: [ id, pod ]
      regex: .+;

  #kube-proxy
  - job_name: kube-proxy
    honor_labels: true
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names:
        - kube-system
    relabel_configs:
    - source_labels: [ __meta_kubernetes_pod_label_k8s_app ]
      regex: kube-proxy
      action: keep
    - source_labels:
      - __address__
      regex: (.+?)(\\:\\d+)?
      replacement: $1:10249
      action: replace
      target_label: __address__
    - source_labels:
      - __meta_kubernetes_pod_name
      target_label: pod
    - source_labels:
      - __meta_kubernetes_pod_container_name
      target_label: container
    - source_labels:
      - __meta_kubernetes_namespace
      target_label: namespace
    - source_labels:
      - __meta_kubernetes_pod_node_name
      target_label: node

  #kube-controller-manager
  - job_name: kube-controller-manager
    honor_labels: true
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names:
        - kube-system
    relabel_configs:
    - source_labels: [ __meta_kubernetes_pod_label_component ]
      regex: kube-controller-manager
      action: keep
    - source_labels:
      - __address__
      regex: (.+?)(\\:\\d+)?
      replacement: $1:10257
      action: replace
      target_label: __address__
    - source_labels:
      - __meta_kubernetes_pod_name
      target_label: pod
    - source_labels:
      - __meta_kubernetes_pod_container_name
      target_label: container
    - source_labels:
      - __meta_kubernetes_namespace
      target_label: namespace
    - source_labels:
      - __meta_kubernetes_pod_node_name
      target_label: node

  # kube-scheduler
  - job_name: kube-scheduler
    honor_labels: true
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names:
        - kube-system
    relabel_configs:
    - source_labels: [ __meta_kubernetes_pod_label_component ]
      regex: kube-scheduler
      action: keep
    - source_labels:
      - __address__
      regex: (.+?)(\\:\\d+)?
      replacement: $1:10259
      action: replace
      target_label: __address__
    - source_labels:
      - __meta_kubernetes_pod_name
      target_label: pod
    - source_labels:
      - __meta_kubernetes_pod_container_name
      target_label: container
    - source_labels:
      - __meta_kubernetes_namespace
      target_label: namespace
    - source_labels:
      - __meta_kubernetes_pod_node_name
      target_label: node


  #Calico
  - job_name: calico
    scheme: http
    kubernetes_sd_configs:
    - role: endpoints
    relabel_configs:
    - source_labels: [ __meta_kubernetes_service_name ]
      regex:
      - calico-felix-metrics
      - calico-typha-metrics
      - calico-kube-controllers-metrics
      action: keep
    - source_labels: [ __meta_kubernetes_pod_container_port_name ]
      regex: calico-typha
      action: drop
    - source_labels: [ __meta_kubernetes_pod_node_name ]
      target_label: node
    - source_labels: [ __meta_kubernetes_namespace ]
      target_label: namespace
    - source_labels: [ __meta_kubernetes_service_name ]
      target_label: service
    - source_labels: [ __meta_kubernetes_pod_name ]
      target_label: pod
    - source_labels: [ __meta_kubernetes_pod_container_name ]
      target_label: container
    - source_labels: [ __meta_kubernetes_service_name ]
      target_label: job

  # Autodiscover endpoint with annotaions
  - job_name: kubernetes-endpoints
    kubernetes_sd_configs:
    - role: endpoints
    relabel_configs:
    - action: drop
      source_labels: [ __meta_kubernetes_pod_container_init ]
      regex: "true"
    - action: keep_if_equal
      source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port, __meta_kubernetes_pod_container_port_number ]
    - action: keep
      source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scrape ]
      regex: "true"
    - action: replace
      source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scheme ]
      target_label: __scheme__
      regex: (https?)
    - action: replace
      source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_path ]
      target_label: __metrics_path__
      regex: (.+)
    - action: replace
      source_labels: [ __address__, __meta_kubernetes_service_annotation_prometheus_io_port ]
      target_label: __address__
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
    - source_labels: [ __meta_kubernetes_pod_name ]
      target_label: pod
    - source_labels: [ __meta_kubernetes_pod_container_name ]
      target_label: container
    - source_labels: [ __meta_kubernetes_namespace ]
      target_label: namespace
    - source_labels: [ __meta_kubernetes_pod_node_name ]
      target_label: node
    - source_labels: [ __meta_kubernetes_service_name ]
      target_label: job

  # Autodiscover pod with annotaions
  - job_name: "kubernetes-pods"
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - action: drop
      source_labels: [ __meta_kubernetes_pod_container_init ]
      regex: true
    - action: keep_if_equal
      source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_container_port_number ]
    - source_labels:
      - __meta_kubernetes_pod_annotation_prometheus_io_scheme
      action: replace
      regex: (https?)
      target_label: __scheme__
    - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape ]
      action: keep
      regex: true
    - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_path ]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_port ]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - source_labels: [ __meta_kubernetes_pod_name ]
      target_label: pod
    - source_labels: [ __meta_kubernetes_pod_container_name ]
      target_label: container
    - source_labels: [ __meta_kubernetes_namespace ]
      target_label: namespace
    - source_labels: [ __meta_kubernetes_pod_node_name ]
      target_label: node
    - source_labels: [ __meta_kubernetes_pod_label_app ]
      target_label: job
